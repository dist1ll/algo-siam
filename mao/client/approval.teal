#pragma version 5
// Allow Creation
txn ApplicationID
int 0
==
bnz allow

// Allow only creator to make changes
txn Sender
global CreatorAddress
==
bz reject

// Delete App allow only by Creator
txn OnCompletion
int DeleteApplication
==
bnz allow

// Anything other than Delete and NoOp gets discarded
txn OnCompletion
int NoOp
==
bz reject

main:
// if no arguments, just end
txn NumAppArgs
int 0
==
bnz allow

// This loop brings all the args on the stack
l_arg:
// if index >= Number of Arguments, store args
load 1
txn NumAppArgs
>=
bnz select_option

// get index from scratch space
load 1
txnas ApplicationArgs
// increment index and save
load 1
int 1
+
store 1
// continue loop
b l_arg

// At this point, all arguments are written
// to the stack. We can now decide what to
// do with those arguments. There are two
// options: <delete> or <put>
// Which action we take depends on the msg
// left in the note field.
select_option:
txn Note
byte "put"
b==
bnz store

txn Note
byte "delete"
b==
bnz delete

// if the note contains anything else, fail
b reject

// This is the <delete> option
delete:
app_global_del
// decrement index by 1 instead of 2
// (because the given args are only keys)
load 1
int 1
-
store 1

// if index is still > 0, repeat delete
load 1
int 0
>
bnz delete

// if index is <= 0, finish
int 1
return

// This is the <put> option
store:
app_global_put
// decrement index now until all kv pairs
load 1
int 2
-
store 1

// If index is still > 0, repeat storage
load 1
int 0
>
bnz store

// If index <= 0, finish
int 1
return

///////////////
// Functions //
///////////////

// Quit and Accept only if sent by Creator
allow:
int 1
return

// Reject transaction and quit
reject:
int 0
return
